---
title: "Sampling Methods"
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(gtExtras)
library(here)
library(ggthemes)
library(gtsummary)
library(gt)

ggplot2::theme_set(
  ggthemes::theme_few(base_size = 15)+
  theme(legend.position = "bottom")
  )

```

## Sample Size

### Standard Error

```{r}
#| label: fig-se
#| layout-ncol: 2
#| out-width: 95%
#| fig-cap: The SE for varying sample sizes $n$
#| fig-subcap: 
#|   - maximum sample size $n = 200$
#|   - sample size for $n = 5 \ldots 50$

se_dat <- data.frame(
  sd = 1,
  n = seq(1,200)
) %>% 
  mutate(
    se = sd/sqrt(n)
  )

plt1 <- se_dat %>% 
  ggplot(
    aes(x = n, y = se)
  )+
  geom_line()+
  scale_x_continuous(
    expand = c(0,0,0,0)
  )+
  scale_y_continuous(
    expand = c(0,0,0,0),
    limits = c(0,NA)
  )+
  labs(
    title = "The SE vs. the sample size"
  )


tmp_n_1020 <- se_dat %>% filter(n == 10 | n == 20) %>% 
  rowid_to_column() %>%
  pivot_wider(
    names_from = rowid,
    values_from = c(n,se)
  )

tmp_n_1030 <- se_dat %>% filter(n == 10 | n == 30) %>% 
  rowid_to_column() %>%
  pivot_wider(
    names_from = rowid,
    values_from = c(n,se)
  )
  
tmp_n_1040 <- se_dat %>% filter(n == 10 | n == 40) %>% 
  rowid_to_column() %>%
  pivot_wider(
    names_from = rowid,
    values_from = c(n,se)
  )


tmp <- bind_rows(tmp_n_1020,tmp_n_1030,tmp_n_1040) %>% 
  mutate(
    diff_se = se_1 - se_2
  )

plt2 <- se_dat %>% 
  filter(n>5&n<50) %>% 
  ggplot(
    aes(x = n, y = se)
  )+
  geom_line()+
  scale_x_continuous(
    expand = c(0.05,0,0.05,0),
    # limits = c(5,50),
    breaks = seq(0,50,5)
  )+
  scale_y_continuous(
    expand = c(0,0.01,0.01,0),
    # limits = c(0,0.5)
  )+
  geom_point(
    data = se_dat %>% filter(n == 10 | n == 20 | n == 30 | n == 40),
    shape = 1,
    size = 4
  )+
  geom_segment(
    data = tmp,
    aes(x = n_2,
        xend = n_2,
        y = se_1,
        yend = se_2)
  )+
  geom_segment(
    data = tmp,
    aes(x = n_1,
        xend = n_2,
        y = se_1,
        yend = se_1)
  )+
  geom_text(
    data = se_dat %>% filter(n == 10 | n == 20 | n == 30 | n == 40),
    aes(
      label = se %>% round(.,digits = 3),
      ),
    nudge_x = -1,
    nudge_y = -0.01
  )+
  geom_label(
    data = tmp,
    aes(
      x = n_2,
      y = (se_1 + se_2)/2,
      label = paste0(diff_se %>% round(.,digits = 3)*100,"%")
    )
  )+
  labs(
    title = "The SE vs. the sample size (n = 5 ... 50 and sd = 1)"
  )

plt1
plt2

```

::: {.content-visible when-profile="script"}

{{< acr SE >}} is a statistical measure that quantifies the variation or uncertainty in sample statistics, particularly the mean (average). 
It is a valuable tool in inferential statistics and provides an estimate of how much the sample mean is expected to vary from the true population mean.

\begin{align}
SE = \frac{sd}{\sqrt{n}}
\end{align}

A smaller {{< acr SE >}} indicates that the sample mean is likely very close to the population mean, while a larger standard error suggests greater variability and less precision in estimating the population mean. 
{{< acr SE >}} is crucial when constructing confidence intervals and performing hypothesis tests, as it helps in assessing the reliability of sample statistics as estimates of population parameters.

**Variance vs. Standard Deviation:** The standard error formula is based on the standard deviation of the sample, not the variance. 
The standard deviation is the square root of the variance. 

**Scaling of Variability:** The purpose of the standard error is to measure the variability or spread of sample means. 
The square root of the sample size reflects how that variability decreases as the sample size increases. 
When the sample size is larger, the sample mean is expected to be closer to the population mean, and the standard error becomes smaller to reflect this reduced variability.

**Central Limit Theorem:** The inclusion of $\sqrt{n}$ in the standard error formula is closely tied to the Central Limit Theorem, which states that the distribution of sample means approaches a normal distribution as the sample size increases. 
$\sqrt{n}$ helps in this context to ensure that the standard error appropriately reflects the distribution's properties.

:::

## Random Sampling {.smaller}

:::{.r-stack}

:::{.fragment .fade-in-then-out}

```{r}
#| label: fig-rand-smpl
#| out-width: 85%
#| fig-cap: The idea of random sampling (Dan Kernler).
#| fig-pos: "H"

knitr::include_graphics(here("SamplingMethods","Simple_random_sampling.png"))

```
:::

:::{.fragment .fade-in-then-out}

- **Definition:** Selecting a sample from a population in a purely random manner, where every individual has an equal chance of being chosen.
- **Advantages:**
  - Eliminates bias in selection.
  - Results are often representative of the population.
- **Disadvantages:**
  - Possibility of unequal representation of subgroups.
  - Time-consuming and may not be practical for large populations.

:::

:::

## Stratified Sampling {.smaller}

:::{.r-stack}

:::{.fragment .fade-in-then-out}

```{r}
#| label: fig-strat-smpl
#| out-width: 85%
#| fig-cap: The idea of stratified sampling (Dan Kernler)
#| fig-pos: "H"

knitr::include_graphics(here("SamplingMethods","Stratified_sampling.png"))

```
:::

:::{.fragment .fade-in-then-out}

- **Definition:** Dividing the population into subgroups or strata based on certain characteristics and then randomly sampling from each stratum.
- **Advantages:**
  - Ensures representation from all relevant subgroups.
  - Increased precision in estimating population parameters.
- **Disadvantages:**
  - Requires accurate classification of the population into strata.
  - Complexity in implementation and analysis.

:::

:::

## Systematic Sampling {.smaller}

:::{.r-stack}

:::{.fragment .fade-in-then-out}

```{r}
#| label: fig-syst-smpl
#| out-width: 75%
#| fig-cap: The idea of systematic sampling (Dan Kernler)
#| fig-pos: "H"

knitr::include_graphics(here("SamplingMethods","Systematic_sampling.png"))

```
:::

:::{.fragment .fade-in-then-out}

- **Definition:** Choosing every kth individual from a list after selecting a random starting point.
- **Advantages:**
  - Simplicity in execution compared to random sampling.
  - Suitable for large populations.
- **Disadvantages:**
  - Susceptible to periodic patterns in the population.
  - If the periodicity aligns with the sampling interval, it can introduce bias.

:::

:::

## Cluster Sampling {.smaller}

:::{.r-stack}

:::{.fragment .fade-in-then-out}

```{r}
#| label: fig-clust-smpl
#| out-width: 75%
#| fig-cap: The idea of clustered sampling (Dan Kernler).
#| fig-pos: "H"

knitr::include_graphics(here("SamplingMethods","Cluster_sampling.png"))

```
:::

:::{.fragment .fade-in-then-out}

- **Definition:** Dividing the population into clusters, randomly selecting some clusters, and then including all individuals from the chosen clusters in the sample.

- **Advantages:**
  - Cost-effective, especially for geographically dispersed populations.
  - Reduces logistical challenges compared to other methods.
- **Disadvantages:**
  - Increased variability within clusters compared to other methods.
  - Requires accurate information on cluster characteristics.

:::

:::

## Example - Classroom Sampling

```{r}
#| include: false

load(here("data","classroom_sampling.RData"))

                                        
```

### Descriptive Statistics (Population)

```{r}
#| label: tbl-ClassroomData
#| tbl-cap: The Classroom data

student_data |> mutate(Gender_Factor = forcats::as_factor(Gender))|> select(-Row,-Col,-Desk,-x,-y,-Gender_Factor) |> tbl_summary()
```

#### Histogram

```{r}
#| label: fig-Students-pop-hist
#| fig-cap: The histograms of students

student_data |> 
  ggplot(
    aes(
      x = Age,
      fill = Gender,
      group = Gender
      )
    )+
  geom_histogram(
    binwidth = 3,
    color = "white"
  )+
  scale_y_continuous(
    expand = c(0,0,0.05,0),
    breaks = seq(0,10,1)
  )+
  scale_x_continuous(
    breaks = seq(0,60,1)
  )+
  scale_fill_grey(start = 0.3, end = 0.7) +
  facet_wrap(~Gender)+
  labs(
    title = "The histogram of the student data"
  )

```

#### Classroom Age

```{r}
#| label: fig-Students-pop-class-age
#| fig-cap: Where students are seated (Age)


ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(color = "black") +
  geom_text(aes(label = Age), size = 5,color = "white") +
  scale_x_continuous(expand = c(0,0,0,0))+
  scale_y_continuous(expand=c(0,0,0,0))+
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 

```

#### Classroom Gender

```{r}
#| label: fig-Students-pop-class-gender
#| fig-cap: Where students are seated (Age)


ggplot(student_data, aes(x = x, y = y, fill = Gender)) +
  geom_tile(color = "white") +
  geom_text(aes(label = Gender, size = 5)) +
  scale_fill_manual(values = c("Male" = "skyblue", "Female" = "pink")) +
  scale_x_continuous(expand = c(0,0,0,0))+
  scale_y_continuous(expand=c(0,0,0,0))+
  labs(
    title = "Classroom Gender Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 

```

#### Population Values

$$\mu_{Age} = `r paste0(mean(student_data$Age))`$$
$$sd_{Age} = `r paste0(round(sd(student_data$Age),digits = 2))`$$

These are the values we want to estimate using the introduced sampling strategies

### Simple Random Sampling

```{r}
#| label: tbl-srswor-overview
#| tbl-cap: The means and standard deviations of the classroom data for n = 5,10,15,20

student_data_srswor_n5 <- student_data %>%                         
  sample_n(size = 5)

student_data_srswor_n10 <- student_data %>%                         
  sample_n(size = 10)

student_data_srswor_n15 <- student_data %>%                         
  sample_n(size = 15)

student_data_srswor_n20 <- student_data %>%                         
  sample_n(size = 20)

srswor <- data.frame(
  n = c(5,10,15,20),
  smpl_type = "simple random sampling",
  means = c(
    mean(student_data_srswor_n5$Age),
    mean(student_data_srswor_n10$Age),
    mean(student_data_srswor_n15$Age),
    mean(student_data_srswor_n20$Age)
  ),
  sds = c(
    sd(student_data_srswor_n5$Age),
    sd(student_data_srswor_n10$Age),
    sd(student_data_srswor_n15$Age),
    sd(student_data_srswor_n20$Age)
  ),
  diff_means = c(
    mean(student_data$Age)-mean(student_data_srswor_n5$Age),
    mean(student_data$Age)-mean(student_data_srswor_n10$Age),
    mean(student_data$Age)-mean(student_data_srswor_n15$Age),
    mean(student_data$Age)-mean(student_data_srswor_n20$Age)
  ),
  diff_sd = c(
    sd(student_data$Age)-sd(student_data_srswor_n5$Age),
    sd(student_data$Age)-sd(student_data_srswor_n10$Age),
    sd(student_data$Age)-sd(student_data_srswor_n15$Age),
    sd(student_data$Age)-sd(student_data_srswor_n20$Age)
  )
)

srswor |> 
  select(n,means,sds) |> 
  mutate(n = as.character(n)) |> 
  add_row(n = "population",means = mean(student_data$Age), sds = sd(student_data$Age)) |> 
  gt()  |> 
  fmt_number(columns = c("means","sds"),decimals = 2) |> 
  cols_label(
    means = "mean in years",
    sds = "standard deviation in years"
  ) |> 
  cols_align(
    align = "center",
    columns = everything()
  )


```

#### $n = 5$

```{r}
#| label: fig-Students-pop-srswor-n5
#| fig-cap: Where students are seated (Age) and the 5 samples

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(color = "black") +
  geom_tile(data = student_data_srswor_n5,aes(fill = Age,color = "red"),size = 1.5, show.legend = FALSE)+
  geom_text(aes(label = Age), size = 5,color = "white") +
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0),breaks = seq(1,10,1))+
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### $n = 10$

```{r}
#| label: fig-Students-pop-srswor-n10
#| fig-cap: Where students are seated (Age) and the 10 samples

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(color = "black") +
  geom_tile(data = student_data_srswor_n10,aes(fill = Age,color = "red"),size = 1.5, show.legend = FALSE)+
  geom_text(aes(label = Age), size = 5,color = "white") +
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0),breaks = seq(1,10,1))+
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### $n = 15$

```{r}
#| label: fig-Students-pop-srswor-n15
#| fig-cap: Where students are seated (Age) and the 15 samples

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(color = "black") +
  geom_tile(data = student_data_srswor_n15,aes(fill = Age,color = "red"),size = 1.5, show.legend = FALSE)+
  geom_text(aes(label = Age), size = 5,color = "white") +
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0),breaks = seq(1,10,1))+
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### $n = 20$

```{r}
#| label: fig-Students-pop-srswor-n20
#| fig-cap: Where students are seated (Age) and the 20 samples

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(color = "black") +
  geom_tile(data = student_data_srswor_n20,aes(fill = Age,color = "red"),size = 1.5, show.legend = FALSE)+
  geom_text(aes(label = Age), size = 5,color = "white") +
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0),breaks = seq(1,10,1))+
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### Simple random sampling - comparison to population (mean)

```{r}
#| label: fig-Students-srswor-diffmeans
#| fig-cap: The difference in means at different sample sizes



srswor |> 
  ggplot(
    aes(
      x = n,
      y = diff_means
    )
  )+
  geom_col()+
  geom_hline(
    yintercept = 0
  )+
  labs(
    title = "The difference in means with increasing sample size",
    subtitle = "0 means no difference (perfect estimate)",
    x = "sample size",
    y = "difference in means (years)"
  )
  


```

#### Simple random sampling - comparison to population (sd)

```{r}
#| label: fig-Students-srswor-diffsd
#| fig-cap: The difference in sd at different sample sizes




srswor |> 
  ggplot(
    aes(
      x = n,
      y = diff_sd
    )
  )+
  geom_col()+
  geom_hline(
    yintercept = 0
  )+
  labs(
    title = "The difference in sd with increasing sample size",
    subtitle = "0 means no difference (perfect estimate)",
    x = "sample size",
    y = "difference in sd (years)"
  )


```

### Systematic Sampling

Sample always the $5th$.

```{r}
#| label: tbl-syssmpl-overview
#| tbl-cap: The output of systematic sampling for every 8th, 5th, 4th, 2nd


syst_8 <- student_data |> 
  slice(seq(1, n(), by = 8))

syst_5 <- student_data |> 
  slice(seq(1, n(), by = 5))

# syst_4 <- student_data |> 
#   slice(seq(1, n(), by = 4))

syst_2 <- student_data |> 
  slice(seq(1, n(), by = 2))

systsmpl <- data.frame(
  k = c(8,5,2),
  smpl_type = "systematic sampling",
  n = c(nrow(syst_8),nrow(syst_5),nrow(syst_2)),
  means = c(
    mean(syst_8$Age),
    mean(syst_5$Age),
    mean(syst_2$Age)
  ),
  sds = c(
    sd(syst_8$Age),
    sd(syst_5$Age),
    sd(syst_2$Age)
  )
) 

systsmpl <- systsmpl|> 
  mutate(
    diff_means = mean(student_data$Age)-means,
    diff_sds = sd(student_data$Age) - sds
  )

systsmpl |> 
  select(k,means,sds) |> 
  mutate(k = as.character(k)) |> 
  add_row(k = "population",means = mean(student_data$Age), sds = sd(student_data$Age)) |> 
  gt()  |> 
  fmt_number(columns = c("means","sds"),decimals = 2) |> 
  cols_label(
    means = "mean in years",
    sds = "standard deviation in years"
  ) |> 
  cols_align(
    align = "center",
    columns = everything()
  )


```

#### $k = 8$

```{r}
#| label: fig-Students-systsmpl-k8
#| fig-cap: Where students are seated (Age) and every 8th sample

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(color = "black") +
  geom_tile(data = syst_8,aes(fill = Age,color = "red"),size = 1.5, show.legend = FALSE)+
  geom_text(aes(label = Age), size = 5,color = "white") +
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0))+
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### $k = 5$

```{r}
#| label: fig-Students-systsmpl-k5
#| fig-cap: Where students are seated (Age) and every 5th sample

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(color = "black") +
  geom_tile(data = syst_5,aes(fill = Age,color = "red"),size = 1.5, show.legend = FALSE)+
  geom_text(aes(label = Age), size = 5,color = "white") +
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0))+
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### $k = 2$

```{r}
#| label: fig-Students-systsmpl-k2
#| fig-cap: Where students are seated (Age) and every 2nd sample

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(color = "black") +
  geom_text(aes(label = Age), size = 5,color = "white") +
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0))+
  annotate(
    geom = "raster",
    x = c(1,1,1,1,1),
    y = c(1,2,3,4,5),
    fill = "red4",
    alpha = 0.4
    # color = "red"
  )+
  annotate(
    geom = "raster",
    x = c(3,3,3,3,3),
    y = c(1,2,3,4,5),
    fill = "red4",
    alpha = 0.4
    # color = "red"
  )+
  annotate(
    geom = "raster",
    x = c(5,5,5,5,5),
    y = c(1,2,3,4,5),
    fill = "red4",
    alpha = 0.4
    # color = "red"
  )+
  annotate(
    geom = "raster",
    x = c(7,7,7,7,7),
    y = c(1,2,3,4,5),
    fill = "red4",
    alpha = 0.4
    # color = "red"
  )+
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 

```

#### Systemtic sampling - comparison to population (mean)

```{r}
#| label: fig-Students-systsmlp-diffmeans
#| fig-cap: The difference in means at different sampling intervals



systsmpl |> 
  ggplot(
    aes(
      x = k,
      y = diff_means
    )
  )+
  geom_col()+
  geom_hline(
    yintercept = 0
  )+
  geom_text(
    aes(
      y = 0.1,
      label = paste0("n = ",n)
    )
  )+
  labs(
    title = "The difference in means with varying sampling interval",
    subtitle = "0 means no difference (perfect estimate)",
    x = "sampling interval",
    y = "difference in means (years)"
  )+
  scale_x_continuous(breaks = systsmpl$k)


```

#### Systemtic sampling - comparison to population (sd)

```{r}
#| label: fig-Students-systsmlp-diffsd
#| fig-cap: The difference in sd at different sampling intervals



systsmpl |> 
  ggplot(
    aes(
      x = k,
      y = diff_sds
    )
  )+
  geom_col()+
  geom_hline(
    yintercept = 0
  )+
  geom_text(
    aes(
      y = 0,
      label = paste0("n = ",n)
    ),
    vjust = 0
  )+
  labs(
    title = "The difference in sd with varying sampling interval",
    subtitle = "0 means no difference (perfect estimate)",
    x = "sampling interval",
    y = "difference in sd (years)"
  )+
  scale_x_continuous(breaks = systsmpl$k)


```

### Stratified Sampling

```{r}
#| echo: true
#| output: true

stratified_prop_n5 <- student_data %>%
  group_by(Gender) %>%
  sample_frac(0.12) %>%  # Sample 30% from each gender
  ungroup()

stratified_prop_n10 <- student_data %>%
  group_by(Gender) %>%
  sample_frac(0.25) %>%  # Sample 30% from each gender
  ungroup()

stratified_prop_n15 <- student_data %>%
  group_by(Gender) %>%
  sample_frac(0.38) %>%  # Sample 30% from each gender
  ungroup()

stratified_prop_n20 <- student_data %>%
  group_by(Gender) %>%
  sample_frac(0.50) %>%  # Sample 30% from each gender
  ungroup()

strtsmpl <- data.frame(
  smpl_type = "stratified sampling",
  n = c(5,10,15,20),
  prop = c(0.12,0.25,0.38,0.5),
  means = c(
    mean(stratified_prop_n5$Age),
    mean(stratified_prop_n10$Age),
    mean(stratified_prop_n15$Age),
    mean(stratified_prop_n20$Age)
  ),
  sds = c(
    sd(stratified_prop_n5$Age),
    sd(stratified_prop_n10$Age),
    sd(stratified_prop_n15$Age),
    sd(stratified_prop_n20$Age)
  )
) 

strtsmpl <- strtsmpl|> 
  mutate(
    diff_means = mean(student_data$Age)-means,
    diff_sds = sd(student_data$Age) - sds
  )

```

#### $\text{proportion} = 12\% \rightarrow n = 5$

```{r}
#| label: fig-Students-strtsml-n5
#| fig-cap: Where students are seated (Age), stratified according to gender ($12\%$)

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(aes(color = Gender),size = 2) +
  geom_text(aes(label = Age), size = 5,color = "white") +
  geom_label(data = stratified_prop_n5,aes(label = Age),color = "white",fill = "black",size = 7)+
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0))+
  scale_color_manual(values = c("Male" = "skyblue", "Female" = "pink")) +
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### $\text{proportion} = 25\% \rightarrow n = 10$

```{r}
#| label: fig-Students-strtsml-n10
#| fig-cap: Where students are seated (Age), stratified according to gender ($25\%$)

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(aes(color = Gender),size = 2) +
  geom_text(aes(label = Age), size = 5,color = "white") +
  geom_label(data = stratified_prop_n10,aes(label = Age),color = "white",fill = "black",size = 7)+
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0))+
  scale_color_manual(values = c("Male" = "skyblue", "Female" = "pink")) +
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### $\text{proportion} = 38\% \rightarrow n = 15$

```{r}
#| label: fig-Students-strtsml-n15
#| fig-cap: Where students are seated (Age), stratified according to gender ($38\%$)

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(aes(color = Gender),size = 2) +
  geom_text(aes(label = Age), size = 5,color = "white") +
  geom_label(data = stratified_prop_n15,aes(label = Age),color = "white",fill = "black",size = 7)+
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0))+
  scale_color_manual(values = c("Male" = "skyblue", "Female" = "pink")) +
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```

#### $\text{proportion} = 50\% \rightarrow n = 20$

```{r}
#| label: fig-Students-strtsml-n20
#| fig-cap: Where students are seated (Age), stratified according to gender ($50\%$)

ggplot(student_data, aes(x = x, y = y, fill = Age)) +
  geom_tile(aes(color = Gender),size = 2) +
  geom_text(aes(label = Age), size = 5,color = "white") +
  geom_label(data = stratified_prop_n20,aes(label = Age),color = "white",fill = "black",size = 7)+
  scale_x_continuous(expand = c(0,0,0,0),breaks = seq(1,10,1))+
  scale_y_continuous(expand=c(0,0,0,0))+
  scale_color_manual(values = c("Male" = "skyblue", "Female" = "pink")) +
  labs(
    title = "Classroom Age Distribution (x,y Coordinates)",
    x = "Column (x)",
    y = "Row (y)"
  ) 
```
#### Stratified sampling - comparison to population (mean)

```{r}
#| label: fig-Students-strtsmpl-diffmeans
#| fig-cap: The difference in means at different sample sizes



strtsmpl |> 
  ggplot(
    aes(
      x = n,
      y = diff_means
    )
  )+
  geom_col()+
  geom_text(aes(label = scales::label_percent()(prop)),y = 0.05, vjust = 0)+
  geom_hline(
    yintercept = 0
  )+
  labs(
    title = "The difference in means with increasing sample size",
    subtitle = "0 means no difference (perfect estimate)",
    x = "sample size",
    y = "difference in means (years)"
  )
  


```

#### Stratified sampling - comparison to population (sd)

```{r}
#| label: fig-Students-strtsmpl-diffsds
#| fig-cap: The difference in sd at different sample sizes



strtsmpl |> 
  ggplot(
    aes(
      x = n,
      y = diff_sds
    )
  )+
  geom_col()+
  geom_text(aes(label = scales::label_percent()(prop)),y = 0.05, vjust = 0)+
  geom_hline(
    yintercept = 0
  )+
  labs(
    title = "The difference in sd with increasing sample size",
    subtitle = "0 means no difference (perfect estimate)",
    x = "sample size",
    y = "difference in sd (years)"
  )
  


```

### Clustered Sampling

```{r}
#| label: tbl-starwarsdata-clust
#| tbl-cap: The starwars dataset with clustered sampling

starwars_clust <- starwars %>%                          
  filter(homeworld %in% sample(unique(homeworld),
                               size = 10))
starwars_clust |> summary()

```


## Bootstrapping {.smaller}

:::{.r-stack}

:::{.fragment .fade-in-then-out}

```{r}
#| label: fig-smpl-btstrp
#| out-width: 75%
#| fig-cap: The idea of bootstrapping (Biggerj1, Marsupilami)
#| fig-pos: "H"

knitr::include_graphics(here("SamplingMethods","Illustration_bootstrap.png"))

```

:::

:::{.fragment .fade-in-then-out}

- **Definition:** Estimating sample statistic distribution by drawing new samples with replacement from observed data, providing insights into variability without strict population distribution assumptions.

- **Advantages:**
  - Non-parametric: Works without assuming a specific data distribution.
  - Confidence Intervals: Facilitates easy estimation of confidence intervals.
  - Robustness: Reliable for small sample sizes or unknown data distributions.

- **Disadvantages:**
  - Computationally Intensive: Resource-intensive for large datasets.
  - Results quality relies on the representativeness of the initial sample (garbage in - garbage out).
  - Cannot compensate for inadequate information in the original sample.
  - Not Always Optimal: Traditional methods may be better in cases meeting distribution assumptions.

:::

:::

::: {.content-visible when-profile="slides"}

### Bootstrapping in the classroom

:::{.r-stack}

:::{.fragment .fade-in-then-out}

:::{style="font-size: 80%;"}

![](chapter003/50_cent.jpg){fig-align="center" width=50%}

* imagine all $0.50€$ coins that are used today
* we are interested in the average minting year
* we can not just look at all the coins, we have to estimate the average minting year
* we assume the 50 coins to be a representative sample (is it though?)

:::

:::

:::{.fragment .fade-in-then-out}

```{r}
#| include: false

# coins_sample <- pennies_sample
set.seed(1253)
coins_sample <- data.frame(
  year = sample(seq(2002,2023),50, replace = TRUE)) %>% 
  rowid_to_column(var = "ID")

```


```{r}

plt_dist_coins <- coins_sample %>% 
  ggplot(
    aes(
      x = year
    )
  )+
  geom_histogram(
    binwidth = 2.5,
    color = "white"
  )+
  scale_y_continuous(
    expand = c(0,0,0.05,0)
  )+
  scale_x_continuous(
    breaks = seq(1900,2500,2)
  )+
  labs(
    title = "Distribution of the minting year in the 50 coins"
  )+
  theme_bw(
    base_size = 20
  )

plt_dist_coins

```

:::

:::{.fragment .fade-in-then-out}

```{r}

plt_dist_coins+
  geom_vline(
    xintercept = mean(coins_sample$year), 
    color = "red",
    linewidth = 2
    )

```

:::

:::{.fragment .fade-in-then-out}

<!-- ![](chapter003/CoinResamplingPrint.svg){fig-align="center" width=30%} -->

:::{style="font-size: 80%;"}

* Population $N = ?$
* Population $\mu = ? \rightarrow$ we want to know that!
* sample mean $\bar{x} = `r mean(coins_sample$year)`$


* $\bar{x} = `r mean(coins_sample$year)`$ is the *point estimate*
* Strategy to be saver about the *mean minting year*? $\rightarrow$ MORE SAMPLES

:::

:::

:::{.fragment .fade-in-then-out}

![](chapter003/batman.jpg){.r-stretch}

:::

:::{.fragment .fade-in-then-out}

* What is a good sample size to resample (how often)?
* Draw a number from the hat.
* Put the number back into the hat. (This is called: *resampling with replacement*)
* Why do we put the number back into the hat?
* Now do it.

:::

:::

:::

